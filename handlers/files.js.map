{
  "version": 3,
  "file": "files.js",
  "sourceRoot": "/Users/Sergey/Work/BB/wcb-project/http/src",
  "sources": [
    "files.ts"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "import Node from '../node';\n\nimport {Server} from '../server';\nimport {Mime} from '../mime';\nimport {Handler} from './handler';\n\nexport class FileRoute {\n    private pattern:any;\n    private location:any;\n    constructor(settings){\n        if(typeof settings=='string'){\n            settings = [/^\\/(.*)$/i,`${settings}/$1`];\n        }\n        this.pattern = settings.shift();\n        this.location = settings.shift();\n    }\n    match(url){\n        if(url.match(this.pattern)){\n            return url.replace(this.pattern,this.location);\n        }\n    }\n    toString(){\n        return `Route(${this.pattern} -> ${this.location})`\n    }\n}\n\n@Server.handler('files')\nexport class FileHandler extends Handler {\n    config:any;\n    routes:any;\n    constructor(){\n        super();\n        this.config = FileHandler.config;\n        this.routes = [];\n        if(typeof this.config.path=='string'){\n            this.config.path=[this.config.path];\n        }\n        this.config.path.forEach(p=>{\n            this.routes.push(new FileRoute(p));\n        });\n    }\n    resource(path){\n        try {\n            var stat = Node.Fs.statSync(path);\n            if (stat.isDirectory()) {\n                return this.resource(Node.Path.resolve(path, 'index.html'));\n            } else\n            if (stat.isFile()) {\n                return {exist:true,path:path};\n            } else {\n                return {exist:false,path:path};\n            }\n        }catch(e){\n            return {exist:false,path:path};\n        }\n    }\n    accept(req,res){\n\n    }\n    handle(req,res){\n        var path = req.url.split('?')[0];\n        for(var file,i=0;i<this.routes.length;i++){\n            file = this.routes[i].match(path);\n            if(file && (file = this.resource(file)).exist){\n                break;\n            }\n        }\n\n        if(file && file.exist){\n            res.writeHead(200,{\n                'Content-Type': Mime.getType(file.path)\n            });\n            res.stream = Node.Fs.createReadStream(file.path);\n        }else{\n            res.writeHead(404,{\n                'Content-Type': Mime.getType(file?file.path:'req.url')\n            });\n            res.end('File Not Found');\n        }\n    }\n}"
  ]
}