{"version":3,"file":"rest.js","sourceRoot":"","sources":["rest.ts"],"names":[],"mappings":"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","sourcesContent":["import Node from '../node';\nimport {Server} from '../server';\nimport {Mime} from '../mime';\nimport {Handler} from './handler';\nimport {Result} from '../rest';\nimport {Class} from \"runtime/reflect/class\";\nimport {Method} from \"runtime/reflect/method\";\nimport {Member} from \"runtime/reflect/member\";\nimport {Constructor} from \"runtime/reflect/constructor\";\n\nexport class RestRoute {\n    static ACTIONS = ['GET','POST','PUT','PATCH','DELETE','HEAD','OPTIONS'];\n    static isActionMethod(m:Member){\n        return (m instanceof Method && RestRoute.ACTIONS.indexOf(m.name.toUpperCase())>=0);\n    }\n\n    public method:Method;\n    public path:any;\n    public params:any;\n    public regexp:any;\n    public action:string;\n    constructor(path:string,method:Method){\n        this.method = method;\n        this.action = method instanceof Constructor ? 'GET' : this.method.name.toUpperCase();\n        this.path   = path;\n        this.params = [];\n        this.regexp = [];\n        path.split('/').forEach(part=>{\n            if(part[0]==':'){\n                var [m,p,r] = part.match(/:([a-zA-Z0-9_\\\\-]+)(.*)/);\n                this.params.push(p);\n                this.regexp.push('([a-zA-Z0-9_\\\\-]+)'+r);\n            }else\n            if(part[0]=='*'){\n                this.params.push(part.substring(1));\n                this.regexp.push('(.*)');\n            }else{\n                this.regexp.push(part);\n            }\n        });\n        this.regexp = new RegExp('^'+this.action+'\\\\s+'+this.regexp.join('\\\\/')+'$');\n    }\n    match(path){\n        return path.match(this.regexp);\n    }\n    execute(options:any,...args):any{\n        //route.resource.prototype[route.action].apply(resource,matched);\n        let instance = new (<any>this.method.owner.value)(...args);\n        Object.defineProperties(instance,{\n            path     : {value:options.path},\n            query    : {value:options.query},\n            params   : {value:options.params},\n            headers  : {value:options.headers},\n            body     : {value:options.body},\n            request  : {value:options.request},\n            response : {value:options.response}\n        });\n        if(this.method instanceof Constructor){\n            return instance;\n        }else{\n            return this.method.invoke(instance,...options.matched);\n        }\n\n    }\n    toJSON(){\n        return {\n            method    : this.method.toString(),\n            path      : this.path,\n            params    : this.params,\n            regexp    : this.regexp.toString()\n        }\n    }\n    toString(){\n        return 'Route('+this.regexp.toString()+')';\n    }\n}\n\n@Server.handler('rest')\nexport class RestHandler extends Handler {\n    static get routes():{[k:string]:RestRoute}{\n        return Object.defineProperty(this,'routes',{\n            enumerable:true,\n            value:Object.create(null)\n        }).routes;\n    }\n    static register(path,resource:Class){\n        resource.getMembers(m=>RestRoute.isActionMethod(m)).forEach((method:Method)=>{\n            let route = new RestRoute(path,method);\n            let routeId = route.toString();\n            if(!this.routes[routeId]){\n                this.routes[routeId] = route;\n            }else{\n                route = this.routes[routeId];\n                throw new Error(`Cant route '${method.toString()}' to '${path}' it's already bounded to ${route.method.toString()}`);\n            }\n        });\n    }\n\n    private config:any;\n\n    constructor(){\n        super();\n        this.config = RestHandler.config;\n    }\n    accept(req,res){\n\n    }\n    handle(req,res){\n        var url = Node.Url.parse(req.url,true);\n        var root = this.config.path;\n        var method = req.method.toUpperCase();\n        var headers = req.headers;\n        var query = url.query;\n        if(url.pathname==root){\n            res.writeHead(200,{\n                'Content-Type': 'application/json'\n            });\n            res.end(JSON.stringify({\n                routes:RestHandler.routes,\n                config:RestHandler.config\n            }));\n        } else\n        if(url.pathname.indexOf(root)==0){\n            var route,matched,path = method+' '+url.pathname.replace(root,'');\n\n            for(var r in RestHandler.routes){\n                route = RestHandler.routes[r];\n                if(matched = route.match(path)){\n                    break;\n                }\n            }\n            if(matched){\n                matched.shift();\n                var match = route.toJSON();\n                match.params = {};\n                match.query = query;\n                match.headers = headers;\n                route.params.forEach((p,i)=>{\n                    match.params[p] = matched[i];\n                });\n\n                //resource.path = match.params;\n                //resource.method = match.params;\n                //resource.params = match.params;\n\n                var promise:Promise<any> = Promise.resolve();\n                promise = promise.then(()=>{\n                    var result = req.body;\n                    if(req.body && req.body.length){\n                        try{\n                            result = JSON.parse(req.body.toString('utf8'));\n                        }catch(ex){}\n                    }\n                    return result;\n                });\n                promise = promise.then(body=>{\n                    if(match.body = body){\n                        matched.push(body);\n                    }\n                    match.matched = matched;\n                    match.request = req;\n                    match.response = res;\n                    return route.execute(match)\n                });\n\n                promise = promise.then(result=>{\n                    if(result == null || typeof result == 'undefined'){\n                        return Result.create({\n                            error   : 'Resource Not Found',\n                            code    : 404\n                        },404);\n                    }\n                    if(result instanceof Result){\n                        return result;\n                    }else{\n                        return Result.create(JSON.stringify(result,null,'  '),200,{\n                            'Content-Type': 'application/json'\n                        });\n                    }\n                });\n                promise = promise.catch(result=>{\n                    if(result == null || typeof result == 'undefined'){\n                        return Result.create({\n                            error   : 'Resource Not Found',\n                            code    : 404\n                        },404);\n                    }\n                    if(result instanceof Result){\n                        return result;\n                    }else\n                    if(result instanceof Error){\n                        return Result.create({\n                            error   : result.message,\n                            code    : result.code||500,\n                            details : result.details,\n                            stack   : result.stack.split(\"\\n\")\n                        },500);\n                    }else{\n                        return Result.create({\n                            error   : 'Unknown Server Error',\n                            code    : 500,\n                            data    : result\n                        },500);\n                    }\n                });\n                promise = promise.then(result=>{\n                    res.writeHead(result.status,result.headers);\n                    if(result.value){\n                        if(typeof result.value!=\"string\" && !(result.value instanceof Buffer)){\n                            res.end(JSON.stringify(result.value));\n                        }else{\n                            res.end(result.value);\n                        }\n                    }else{\n                        res.end();\n                    }\n\n                });\n\n                return promise;\n            }else{\n                // console.info(path,res);\n                res.writeHead(404,{\n                    'Content-Type': 'application/json'\n                });\n                res.end(JSON.stringify({\n                    error   : 'Invalid Resource',\n                    code    : 404\n                }));\n            }\n\n        }\n    }\n}\n\n"]}