{"version":3,"file":"stream_reader.js","sourceRoot":"","sources":["stream_reader.ts"],"names":[],"mappings":"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","sourcesContent":["\nexport class StreamReader {\n\n  private _queue:any[];\n  private _queueSize:number;\n  private _offset:number;\n\n  public constructor() {\n    this._queue     = [];\n    this._queueSize = 0;\n    this._offset    = 0;\n  }\n\n  public put(buffer) {\n    if (!buffer || buffer.length === 0) return;\n    if (!buffer.copy) buffer = new Buffer(buffer);\n    this._queue.push(buffer);\n    this._queueSize += buffer.length;\n  }\n\n  public read(length) {\n    if (length > this._queueSize) return null;\n    if (length === 0) return new Buffer(0);\n\n    this._queueSize -= length;\n\n    var queue  = this._queue,\n        remain = length,\n        first  = queue[0],\n        buffers, buffer;\n\n    if (first.length >= length) {\n      if (first.length === length) {\n        return queue.shift();\n      } else {\n        buffer = first.slice(0, length);\n        queue[0] = first.slice(length);\n        return buffer;\n      }\n    }\n\n    for (var i = 0, n = queue.length; i < n; i++) {\n      if (remain < queue[i].length) break;\n      remain -= queue[i].length;\n    }\n    buffers = queue.splice(0, i);\n\n    if (remain > 0 && queue.length > 0) {\n      buffers.push(queue[0].slice(0, remain));\n      queue[0] = queue[0].slice(remain);\n    }\n    return this._concat(buffers, length);\n  }\n\n  public eachByte(callback, context) {\n    var buffer, n, index;\n\n    while (this._queue.length > 0) {\n      buffer = this._queue[0];\n      n = buffer.length;\n\n      while (this._offset < n) {\n        index = this._offset;\n        this._offset += 1;\n        callback.call(context, buffer[index]);\n      }\n      this._offset = 0;\n      this._queue.shift();\n    }\n  }\n\n  private _concat(buffers, length) {\n    if (Buffer.concat) return Buffer.concat(buffers, length);\n    var buffer = new Buffer(length),\n        offset = 0;\n    for (var i = 0, n = buffers.length; i < n; i++) {\n      buffers[i].copy(buffer, offset);\n      offset += buffers[i].length;\n    }\n    return buffer;\n  }\n\n}"]}