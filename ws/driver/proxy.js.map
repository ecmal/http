{"version":3,"file":"proxy.js","sourceRoot":"","sources":["proxy.ts"],"names":[],"mappings":"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","sourcesContent":["import * as url from \"node/url\";\nimport {Stream} from \"node/stream\";\nimport {Base} from \"./base\";\nimport {Headers} from \"./headers\";\nimport {HttpParser} from \"./http_parser\";\n\n\nconst PORTS = {'ws:': 80, 'wss:': 443};\n\nexport class Proxy extends Stream {\n\n    public readable;\n    public writable;\n    public statusCode;\n    public headers;\n\n    private _client;\n    private _http;\n    private _origin;\n    private _url;\n    private _options;\n    private _state;\n    private _paused;\n    private _headers;\n\n    constructor(client, origin, options) {\n        super();\n        this._client = client;\n        this._http = new HttpParser('response');\n        this._origin = (typeof client.url === 'object') ? client.url : url.parse(client.url);\n        this._url = (typeof origin === 'object') ? origin : url.parse(origin);\n        this._options = options || {};\n        this._state = 0;\n\n        this.readable = this.writable = true;\n        this._paused = false;\n\n        this._headers = new Headers();\n        this._headers.set('Host', this._origin.host);\n        this._headers.set('Connection', 'keep-alive');\n        this._headers.set('Proxy-Connection', 'keep-alive');\n\n        var auth = this._url.auth && new Buffer(this._url.auth, 'utf8').toString('base64');\n        if (auth) this._headers.set('Proxy-Authorization', 'Basic ' + auth);\n    }\n\n    public setHeader(name, value) {\n        if (this._state !== 0) return false;\n        this._headers.set(name, value);\n        return true;\n    }\n    public start() {\n        if (this._state !== 0) return false;\n        this._state = 1;\n\n        var origin = this._origin,\n            port = origin.port || PORTS[origin.protocol],\n            start = 'CONNECT ' + origin.hostname + ':' + port + ' HTTP/1.1';\n\n        var headers = [start, this._headers.toString(), ''];\n\n        this.emit('data', new Buffer(headers.join('\\r\\n'), 'utf8'));\n        return true;\n    }\n    public pause() {\n        this._paused = true;\n    }\n    public resume() {\n        this._paused = false;\n        this.emit('drain');\n    }\n    public write(chunk) {\n        if (!this.writable) return false;\n\n        this._http.parse(chunk);\n        if (!this._http.isComplete()) return !this._paused;\n\n        this.statusCode = this._http.statusCode;\n        this.headers = this._http.headers;\n\n        if (this.statusCode === 200) {\n            this.emit('connect', new Base.ConnectEvent());\n        } else {\n            var message = \"Can't establish a connection to the server at \" + this._origin.href;\n            this.emit('error', new Error(message));\n        }\n        this.end();\n        return !this._paused;\n    }\n    public end(chunk?) {\n        if (!this.writable) return;\n        if (chunk !== undefined) this.write(chunk);\n        this.readable = this.writable = false;\n        this.emit('close');\n        this.emit('end');\n    }\n    public destroy() {\n        this.end();\n    }\n}\n\n\n"]}