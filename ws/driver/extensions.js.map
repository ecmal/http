{"version":3,"file":"extensions.js","sourceRoot":"","sources":["extensions.ts"],"names":[],"mappings":"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","sourcesContent":["import {Frame} from \"./hybi/frame\";\nimport {Parser} from \"./exts_parser\";\nimport {Pipeline} from \"./pipeline\";\n\n\n\nexport class Extensions {\n    static MESSAGE_OPCODES = [1, 2];\n\n    protected _rsv1;\n    protected _rsv2;\n    protected _rsv3;\n    protected _byName;\n    protected _inOrder;\n    protected _sessions;\n    protected _index;\n    protected _pipeline:Pipeline;\n\n    constructor() {\n        this._rsv1 = this._rsv2 = this._rsv3 = null;\n        this._byName   = {};\n        this._inOrder  = [];\n        this._sessions = [];\n        this._index    = {}\n    }\n\n    public add(ext) {\n        if (typeof ext.name !== 'string') throw new TypeError('extension.name must be a string');\n        if (ext.type !== 'permessage') throw new TypeError('extension.type must be \"permessage\"');\n\n        if (typeof ext.rsv1 !== 'boolean') throw new TypeError('extension.rsv1 must be true or false');\n        if (typeof ext.rsv2 !== 'boolean') throw new TypeError('extension.rsv2 must be true or false');\n        if (typeof ext.rsv3 !== 'boolean') throw new TypeError('extension.rsv3 must be true or false');\n\n        if (this._byName.hasOwnProperty(ext.name))\n            throw new TypeError('An extension with name \"' + ext.name + '\" is already registered');\n\n        this._byName[ext.name] = ext;\n        this._inOrder.push(ext);\n    }\n    public generateOffer() {\n        var sessions = [],\n            offer    = [],\n            index    = {};\n\n        this._inOrder.forEach(function(ext) {\n            var session = ext.createClientSession();\n            if (!session) return;\n\n            var record = [ext, session];\n            sessions.push(record);\n            index[ext.name] = record;\n\n            var offers = session.generateOffer();\n            offers = offers ? [].concat(offers) : [];\n\n            offers.forEach(function(off) {\n                offer.push(Parser.serializeParams(ext.name, off));\n            }, this);\n        }, this);\n\n        this._sessions = sessions;\n        this._index    = index;\n\n        return offer.length > 0 ? offer.join(', ') : null;\n    }\n    public activate(header) {\n        var responses = Parser.parseHeader(header),\n            sessions  = [];\n\n        responses.eachOffer(function(name, params) {\n            var record = this._index[name];\n\n            if (!record)\n                throw new Error('Server sent an extension response for unknown extension \"' + name + '\"');\n\n            var ext      = record[0],\n                session  = record[1],\n                reserved = this._reserved(ext);\n\n            if (reserved)\n                throw new Error('Server sent two extension responses that use the RSV' +\n                    reserved[0] + ' bit: \"' +\n                    reserved[1] + '\" and \"' + ext.name + '\"');\n\n            if (session.activate(params) !== true)\n                throw new Error('Server sent unacceptable extension parameters: ' +\n                    Parser.serializeParams(name, params));\n\n            this._reserve(ext);\n            sessions.push(record);\n        }, this);\n\n        this._sessions = sessions;\n        this._pipeline = new Pipeline(sessions);\n    }\n    public generateResponse(header) {\n        var offers   = Parser.parseHeader(header),\n            sessions = [],\n            response = [];\n        this._inOrder.forEach(function(ext) {\n            var offer = offers.byName(ext.name);\n            if (offer.length === 0 || this._reserved(ext)) return;\n\n            var session = ext.createServerSession(offer);\n            if (!session) return;\n\n            this._reserve(ext);\n            sessions.push([ext, session]);\n            response.push(Parser.serializeParams(ext.name, session.generateResponse()));\n        }, this);\n        this._sessions = sessions;\n        this._pipeline = new Pipeline(sessions);\n        return response.length > 0 ? response.join(', ') : null;\n    }\n    public validFrameRsv(frame:Frame) {\n        var allowed = {rsv1: false, rsv2: false, rsv3: false},ext;\n        if (Extensions.MESSAGE_OPCODES.indexOf(frame.opcode) >= 0) {\n            for (var i = 0, n = this._sessions.length; i < n; i++) {\n                ext = this._sessions[i][0];\n                allowed.rsv1 = allowed.rsv1 || ext.rsv1;\n                allowed.rsv2 = allowed.rsv2 || ext.rsv2;\n                allowed.rsv3 = allowed.rsv3 || ext.rsv3;\n            }\n        }\n        return (allowed.rsv1 || !frame.rsv1) &&\n            (allowed.rsv2 || !frame.rsv2) &&\n            (allowed.rsv3 || !frame.rsv3);\n    }\n    public processIncomingMessage(message, callback, context) {\n        this._pipeline.processIncomingMessage(message, callback, context);\n    }\n    public processOutgoingMessage(message, callback, context) {\n        this._pipeline.processOutgoingMessage(message, callback, context);\n    }\n    public close(callback?, context?) {\n        if (!this._pipeline){\n            return callback.call(context);\n        }\n        this._pipeline.close(callback, context);\n    }\n    public _reserve(ext) {\n        this._rsv1 = this._rsv1 || (ext.rsv1 && ext.name);\n        this._rsv2 = this._rsv2 || (ext.rsv2 && ext.name);\n        this._rsv3 = this._rsv3 || (ext.rsv3 && ext.name);\n    }\n    public _reserved(ext):any{\n        if (this._rsv1 && ext.rsv1) return [1, this._rsv1];\n        if (this._rsv2 && ext.rsv2) return [2, this._rsv2];\n        if (this._rsv3 && ext.rsv3) return [3, this._rsv3];\n        return false;\n    }\n}\n\n\n\n"]}