{
  "version": 3,
  "file": "server.js",
  "sourceRoot": "/Users/Sergey/Work/BB/wcb-project/http/src",
  "sources": [
    "server.ts"
  ],
  "names": [],
  "mappings": ";;IAOA;QAEW,eAAM,GAAb,UAAc,MAAa,EAAC,QAAe;YACvC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,YAAY,EAAE,EAAC,QAAQ,CAAC,CAAC;QACrD,CAAC;QACM,eAAM,GAAb,UAAc,MAAa,EAAC,QAAe;YACvC,MAAM,CAAC,IAAI,QAAQ,CAAC,MAAM,EAAC,QAAQ,CAAC,CAAC;QACzC,CAAC;QAaS,gCAAa,GAAvB;YACG,MAAM,CAAC,IAAI,yBAAY,CAAC,IAAI,CAAC,CAAC;QACjC,CAAC;QACS,4BAAS,GAAnB,UAAoB,GAAmB;YAAvC,iBAwBC;YAvBG,IAAI,OAAO,GAAU,MAAM,CAAC,GAAG,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,WAAW,EAAE,CAAC;YACzE,EAAE,CAAA,CAAC,OAAO,IAAI,OAAO,IAAI,WAAW,CAAC,CAAC,CAAC;gBACnC,IAAI,UAAU,GAAG,IAAI,CAAC,aAAa,EAAE,CAAC;gBACtC,IAAG,CAAC;oBACA,EAAE,CAAA,CAAC,UAAU,CAAC,MAAM,CAAC,GAAG,EAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAA,CAAC;wBACrC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,MAAM,EAAC,GAAG,EAAC,qBAAqB,EAAC;4BAC/C,YAAY,EAAkB,SAAS;4BACvC,SAAS,EAAqB,WAAW;4BACzC,sBAAsB,EAAQ,UAAU,CAAC,IAAI;4BAC7C,wBAAwB,EAAM,IAAI,CAAC,QAAQ;yBAC9C,CAAC,CAAC;wBACH,UAAU,CAAC,EAAE,CAAC,OAAO,EAAC;4BAClB,OAAO,KAAI,CAAC,WAAW,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;4BACvC,KAAI,CAAC,IAAI,CAAC,YAAY,EAAE,UAAU,CAAC,CAAC;wBACxC,CAAC,CAAC,CAAC;wBACH,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,EAAE,CAAC,GAAC,UAAU,CAAC;wBAC3C,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,UAAU,CAAC,CAAC;oBACrC,CAAC;gBACL,CAAC;gBAAA,KAAK,CAAA,CAAC,CAAC,CAAC,CAAA,CAAC;oBACN,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;oBACtB,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,MAAM,EAAC,CAAC,CAAC,IAAI,EAAC,CAAC,CAAC,OAAO,CAAC,CAAC;gBAC/C,CAAC;YACL,CAAC;QACL,CAAC;QAEO,2BAAQ,GAAhB,UAAiB,MAAM,EAAC,MAAa,EAAC,OAAc,EAAC,OAAY,EAAC,IAAK;YACnE,IAAI,CAAC;gBACD,MAAM,GAAG,MAAM,IAAI,GAAG,CAAC;gBACvB,OAAO,GAAG,OAAO,IAAE,sBAAsB,CAAC;gBAC1C,IAAI,IAAI,GAAG,CAAC,eAAY,MAAM,SAAI,OAAO,CAAE,CAAC,CAAC;gBAC7C,EAAE,CAAA,CAAC,OAAO,CAAC,CAAA,CAAC;oBACR,GAAG,CAAA,CAAC,IAAI,GAAG,IAAI,OAAO,CAAC,CAAA,CAAC;wBACpB,EAAE,CAAA,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAA,CAAC;4BACb,IAAI,CAAC,IAAI,CAAC,GAAG,GAAC,IAAI,GAAC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC;wBACrC,CAAC;oBACL,CAAC;gBACL,CAAC;gBACD,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;gBAClB,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,EAAC,OAAO,CAAC,CAAC;gBACxC,EAAE,CAAA,CAAC,MAAM,IAAE,GAAG,CAAC,CAAA,CAAC;oBACZ,MAAM,CAAC,GAAG,EAAE,CAAA;gBAChB,CAAC;YACL,CAAE;YAAA,KAAK,CAAC,CAAC,EAAE,CAAC,CAAA,CAAC;gBACT,OAAO,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;YACrB,CAAC;QACL,CAAC;;;;QAGL,eAAC;QA5DG,kBAAY,MAAa,EAAC,QAAe;YAZ7C,iBAwEC;YA3DO,kBAAO,CAAC;YACR,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;YACzB,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC;YACtB,MAAM,CAAC,EAAE,CAAC,SAAS,EAAC,UAAC,GAAmB;gBACpC,KAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;YACxB,CAAC,CAAC,CAAA;QACN,CAAC;IAqDL,CAAC,AAxED,IAwEC;;IAxED,mCAwEC,CAAA;;;;;;;;;;;;;;;YAxED,uBAAA,SAA8B,qBAwE7B",
  "sourcesContent": [
    "import {Server} from \"node/http\";\nimport {EventEmitter} from \"node/events\";\nimport {IncomingMessage} from \"node/http\";\nimport {WsConnection} from \"./connection\";\n\nimport * as HTTP from \"node/http\";\n\nexport class WsServer extends EventEmitter{\n\n    static create(server:Server,protocol:string):WsServer{\n        return this.inject(HTTP.createServer(),protocol);\n    }\n    static inject(server:Server,protocol:string):WsServer{\n        return new WsServer(server,protocol);\n    }\n\n    public protocol : string;\n    public connections : {[id:string]:WsConnection};\n\n    constructor(server:Server,protocol:string){\n        super();\n        this.protocol = protocol;\n        this.connections = {};\n        server.on('upgrade',(req:IncomingMessage)=>{\n            this.doUpgrade(req);\n        })\n    }\n    protected newConnection():WsConnection{\n       return new WsConnection(true);\n    }\n    protected doUpgrade(req:IncomingMessage){\n        var upgrade:string = String(req.headers['upgrade']).trim().toLowerCase();\n        if(upgrade && upgrade == 'websocket') {\n            var connection = this.newConnection();\n            try{\n                if(connection.accept(req,this.protocol)){\n                    this.response(req.socket,101,'Switching Protocols',{\n                        'Connection'                : 'Upgrade',\n                        'Upgrade'                   : 'websocket',\n                        'Sec-WebSocket-Accept'      : connection.hash,\n                        'Sec-WebSocket-Protocol'    : this.protocol\n                    });\n                    connection.on('close',()=>{\n                        delete this.connections[connection.id];\n                        this.emit('disconnect', connection);\n                    });\n                    this.connections[connection.id]=connection;\n                    this.emit('connect', connection);\n                }\n            }catch(e){\n                console.info(e.stack);\n                this.response(req.socket,e.code,e.message);\n            }\n        }\n    }\n\n    private response(socket,status:number,message:string,headers?:any,body?){\n        try {\n            status = status || 500;\n            message = message||'Unknown Server Error';\n            var data = [`HTTP/1.1 ${status} ${message}`];\n            if(headers){\n                for(var key in headers){\n                    if(headers[key]){\n                        data.push(key+': '+headers[key]);\n                    }\n                }\n            }\n            data.push('\\r\\n');\n            socket.write(data.join('\\r\\n'),'ascii');\n            if(status!=101){\n                socket.end()\n            }\n        } catch (ex){\n            console.info(ex);\n        }\n    }\n\n\n}"
  ]
}