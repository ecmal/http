{"version":3,"file":"session.js","sourceRoot":"","sources":["session.ts"],"names":[],"mappings":";;IAGA;QAgCW,wCAAsB,GAA7B,UAA8B,OAAO,EAAE,QAAQ;YAC3C,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,CAAA,CAAC;gBACf,MAAM,CAAC,QAAQ,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;YACnC,CAAC;YACD,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAA,CAAC;gBACd,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,OAAO,EAAE,QAAQ,CAAC,CAAC,CAAC;YACnD,CAAC;YACD,IAAI,OAAO,GAAG,IAAI,CAAC,WAAW,EAAE,EAAC,MAAM,GAAG,EAAE,EAAC,MAAM,GAAG,CAAC,CAAC;YACxD,IAAI,IAAI,GAAG,IAAI,CAAC;YAChB,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAA,CAAC;gBACf,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;YACxB,CAAC;YACD,IAAI,OAAO,GAAG,UAAU,KAAK,EAAE,OAAO;gBAClC,OAAO,GAAG,cAAY,CAAC,CAAC;gBACxB,OAAO,CAAC,cAAc,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;gBACvC,OAAO,CAAC,cAAc,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;gBACzC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC;oBAAC,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;gBACzC,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;gBACrB,IAAI,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,CAAC;gBACjC,EAAE,CAAC,CAAC,IAAI,CAAC,CAAA,CAAC;oBACN,IAAI,CAAC,sBAAsB,CAAC,KAAK,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;gBAClD,CAAC;gBACD,QAAQ,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC;YAC7B,CAAC,CAAC;YACF,IAAI,MAAM,GAAG,UAAU,IAAI;gBACvB,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;gBAClB,MAAM,IAAI,IAAI,CAAC,MAAM,CAAC;YAC1B,CAAC,CAAC;YACF,IAAI,OAAO,GAAG,UAAU,KAAK;gBACzB,OAAO,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;YACzB,CAAC,CAAC;YACF,OAAO,CAAC,EAAE,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;YAC3B,OAAO,CAAC,EAAE,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;YAC7B,OAAO,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;YAC5B,OAAO,CAAC,KAAK,CAAC,IAAI,MAAM,CAAC,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;YACpD,OAAO,CAAC,KAAK,CAAC;gBACV,OAAO,CAAC,IAAI,GAAG,eAAM,CAAC,MAAM,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;gBAC7C,OAAO,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;YAC3B,CAAC,CAAC,CAAC;QACP,CAAC;QACM,wCAAsB,GAA7B,UAA8B,OAAO,EAAE,QAAQ;YAC3C,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAA,CAAC;gBACf,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,OAAO,EAAE,QAAQ,CAAC,CAAC,CAAC;YACpD,CAAC;YACD,IAAI,OAAO,GAAG,IAAI,CAAC,WAAW,EAAE,EAAC,MAAM,GAAG,EAAE,EAAC,MAAM,GAAG,CAAC,CAAC;YACxD,IAAI,IAAI,GAAG,IAAI,CAAC;YAChB,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAA,CAAC;gBACf,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;YACzB,CAAC;YACD,IAAI,OAAO,GAAG,UAAU,KAAK,EAAE,OAAO;gBAClC,OAAO,GAAG,cAAa,CAAC,CAAC;gBACzB,OAAO,CAAC,cAAc,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;gBACvC,OAAO,CAAC,cAAc,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;gBACzC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAA,CAAC;oBAChB,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;gBACzB,CAAC;gBACD,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;gBACtB,IAAI,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;gBAClC,EAAE,CAAC,CAAC,IAAI,CAAC,CAAA,CAAC;oBACN,IAAI,CAAC,sBAAsB,CAAC,KAAK,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;gBAClD,CAAC;gBACD,QAAQ,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC;YAC7B,CAAC,CAAC;YAEF,IAAI,MAAM,GAAG,UAAU,IAAI;gBACvB,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;gBAClB,MAAM,IAAI,IAAI,CAAC,MAAM,CAAC;YAC1B,CAAC,CAAC;YAEF,IAAI,OAAO,GAAG,UAAU,KAAK;gBACzB,OAAO,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;YACzB,CAAC,CAAC;YAEF,OAAO,CAAC,EAAE,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;YAC3B,OAAO,CAAC,EAAE,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;YAC7B,OAAO,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;YAC5B,IAAI,OAAO,GAAG;gBACV,IAAI,IAAI,GAAG,eAAM,CAAC,MAAM,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;gBACzC,OAAO,CAAC,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;gBAC9C,OAAO,CAAC,IAAI,GAAG,IAAI,CAAC;gBACpB,OAAO,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;YAC3B,CAAC,CAAC;YACF,EAAE,CAAC,CAAC,OAAO,CAAC,MAAM,KAAK,SAAS,CAAC,CAAC,CAAC;gBAC/B,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,YAAY,EAAE,OAAO,CAAC,CAAC;YAC9C,CAAC;YAAC,IAAI,CAAC,CAAC;gBACJ,OAAO,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;YAC3B,CAAC;QACL,CAAC;QACM,uBAAK,GAAZ;YACI,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;YAC3B,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;YACrB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;YAC3B,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;QACzB,CAAC;QACS,6BAAW,GAArB;YACI,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC;gBAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC;YACxC,IAAI,OAAO,GAAG,IAAI,CAAC,gBAAgB,CAAC,EAAC,UAAU,EAAE,IAAI,CAAC,eAAe,EAAC,CAAC,CAAC;YACxE,EAAE,CAAC,CAAC,IAAI,CAAC,oBAAoB,CAAC;gBAAC,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC;YACvD,MAAM,CAAC,OAAO,CAAC;QACnB,CAAC;QACS,6BAAW,GAArB;YACI,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC;gBAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC;YACxC,IAAI,OAAO,GAAG,IAAI,CAAC,gBAAgB,CAAC;gBAChC,UAAU,EAAE,IAAI,CAAC,cAAc;gBAC/B,KAAK,EAAE,IAAI,CAAC,MAAM;gBAClB,QAAQ,EAAE,IAAI,CAAC,SAAS;gBACxB,QAAQ,EAAE,IAAI,CAAC,SAAS;aAC3B,CAAC,CAAC;YAEH,IAAI,KAAK,GAAG,OAAO,CAAC,KAAK,CAAC;YAE1B,wEAAwE;YACxE,0EAA0E;YAC1E,wBAAwB;YAExB,EAAE,CAAC,CAAC,OAAO,CAAC,YAAY,CAAC,KAAK,SAAS,IAAI,OAAO,CAAC,QAAQ,CAAC,KAAK,SAAS,CAAC;gBACvE,OAAO,CAAC,KAAK,GAAG,UAAU,QAAQ;oBAC9B,IAAI,EAAE,GAAG,IAAI,CAAC,cAAc,CAAC;oBAC7B,EAAE,CAAC,CAAC,EAAE,CAAC,KAAK,IAAI,EAAE,CAAC,MAAM,IAAI,EAAE,CAAC,SAAS,CAAC,CAAC,CAAC;wBACxC,KAAK,CAAC,IAAI,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC;oBAC/B,CAAC;oBAAC,IAAI,CAAC,CAAC;wBACJ,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,YAAY,CAAC;wBACpC,IAAI,CAAC,KAAK,CAAC,IAAI,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,QAAQ,CAAC,CAAC;oBAC5C,CAAC;gBACL,CAAC,CAAC;YAEN,EAAE,CAAC,CAAC,IAAI,CAAC,mBAAmB,CAAC;gBAAC,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC;YACtD,MAAM,CAAC,OAAO,CAAC;QACnB,CAAC;QACS,wBAAM,GAAhB,UAAiB,KAAK;YAClB,EAAE,CAAC,CAAC,CAAC,KAAK,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAA,CAAC;gBACxB,MAAM,CAAC;YACX,CAAC;YACD,IAAI,CAAC;gBACD,KAAK,CAAC,KAAK,EAAE,CAAA;YACjB,CAAE;YAAA,KAAK,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAA,CAAC;QACtB,CAAC;QACL,cAAC;QArJG,iBAAY,OAAO;YACf,IAAI,CAAC,MAAM,GAAG,eAAM,CAAC,KAAK,CAAC,OAAO,EAAE,OAAO,EAAE,IAAI,CAAC,eAAe,CAAC,CAAC;YACnE,IAAI,CAAC,SAAS,GAAG,eAAM,CAAC,KAAK,CAAC,OAAO,EAAE,UAAU,EAAE,IAAI,CAAC,kBAAkB,CAAC,CAAC;YAC5E,IAAI,CAAC,SAAS,GAAG,eAAM,CAAC,KAAK,CAAC,OAAO,EAAE,UAAU,EAAE,IAAI,CAAC,kBAAkB,CAAC,CAAC;YAC5E,IAAI,CAAC,wBAAwB,GAAG,eAAM,CAAC,KAAK,CAAC,OAAO,EAAE,mBAAmB,EAAE,KAAK,CAAC,CAAC;YAClF,IAAI,CAAC,oBAAoB,GAAG,eAAM,CAAC,KAAK,CAAC,OAAO,EAAE,eAAe,EAAE,SAAS,CAAC,CAAC;YAC9E,IAAI,CAAC,yBAAyB,GAAG,eAAM,CAAC,KAAK,CAAC,OAAO,EAAE,0BAA0B,EAAE,KAAK,CAAC,CAAC;YAC1F,IAAI,CAAC,qBAAqB,GAAG,eAAM,CAAC,KAAK,CAAC,OAAO,EAAE,sBAAsB,EAAE,SAAS,CAAC,CAAC;YACtF,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;YACnB,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;QACxB,CAAC;IA2IL,CAAC,AAzKD,IAyKC;;IAzKD,iCAyKC,CAAA;;;;;;;;;;YAzKD,sBAAA,OAyKC","sourcesContent":["import * as zlib from \"node/zlib\";\nimport {Common} from \"./common\";\n\nexport class Session {\n\n    protected _level;\n    protected _memLevel;\n    protected _strategy;\n    protected _acceptNoContextTakeover;\n    protected _acceptMaxWindowBits;\n    protected _requestNoContextTakeover;\n    protected _requestMaxWindowBits;\n    protected _ownContextTakeover;\n    protected _ownWindowBits;\n    protected _peerWindowBits;\n    protected _peerContextTakeover;\n    protected _queueIn;\n    protected _queueOut;\n    protected _lockIn;\n    protected _lockOut;\n    protected _inflate;\n    protected _deflate;\n\n    constructor(options) {\n        this._level = Common.fetch(options, 'level', zlib.Z_DEFAULT_LEVEL);\n        this._memLevel = Common.fetch(options, 'memLevel', zlib.Z_DEFAULT_MEMLEVEL);\n        this._strategy = Common.fetch(options, 'strategy', zlib.Z_DEFAULT_STRATEGY);\n        this._acceptNoContextTakeover = Common.fetch(options, 'noContextTakeover', false);\n        this._acceptMaxWindowBits = Common.fetch(options, 'maxWindowBits', undefined);\n        this._requestNoContextTakeover = Common.fetch(options, 'requestNoContextTakeover', false);\n        this._requestMaxWindowBits = Common.fetch(options, 'requestMaxWindowBits', undefined);\n        this._queueIn = [];\n        this._queueOut = [];\n    }\n\n    public processIncomingMessage(message, callback) {\n        if (!message.rsv1){\n            return callback(null, message);\n        }\n        if (this._lockIn){\n            return this._queueIn.push([message, callback]);\n        }\n        let inflate = this._getInflate(),chunks = [],length = 0;\n        let self = this;\n        if (this._inflate){\n            this._lockIn = true;\n        }\n        let return_ = function (error, message) {\n            return_ = function (){};\n            inflate.removeListener('data', onData);\n            inflate.removeListener('error', onError);\n            if (!self._inflate) self._close(inflate);\n            self._lockIn = false;\n            let next = self._queueIn.shift();\n            if (next){\n                self.processIncomingMessage.apply(self, next);\n            }\n            callback(error, message);\n        };\n        let onData = function (data) {\n            chunks.push(data);\n            length += data.length;\n        };\n        let onError = function (error) {\n            return_(error, null);\n        };\n        inflate.on('data', onData);\n        inflate.on('error', onError);\n        inflate.write(message.data);\n        inflate.write(new Buffer([0x00, 0x00, 0xff, 0xff]));\n        inflate.flush(function () {\n            message.data = Common.concat(chunks, length);\n            return_(null, message);\n        });\n    }\n    public processOutgoingMessage(message, callback) {\n        if (this._lockOut){\n            return this._queueOut.push([message, callback]);\n        }\n        let deflate = this._getDeflate(),chunks = [],length = 0;\n        let self = this;\n        if (this._deflate){\n            this._lockOut = true;\n        }\n        let return_ = function (error, message) {\n            return_ = function () {};\n            deflate.removeListener('data', onData);\n            deflate.removeListener('error', onError);\n            if (!self._deflate){\n                self._close(deflate);\n            }\n            self._lockOut = false;\n            let next = self._queueOut.shift();\n            if (next){\n                self.processOutgoingMessage.apply(self, next);\n            }\n            callback(error, message);\n        };\n\n        let onData = function (data) {\n            chunks.push(data);\n            length += data.length;\n        };\n\n        let onError = function (error) {\n            return_(error, null);\n        };\n\n        deflate.on('data', onData);\n        deflate.on('error', onError);\n        deflate.write(message.data);\n        let onFlush = function () {\n            let data = Common.concat(chunks, length);\n            message.data = data.slice(0, data.length - 4);\n            message.rsv1 = true;\n            return_(null, message);\n        };\n        if (deflate.params !== undefined) {\n            deflate.flush(zlib.Z_SYNC_FLUSH, onFlush);\n        } else {\n            deflate.flush(onFlush);\n        }\n    }\n    public close() {\n        this._close(this._inflate);\n        this._inflate = null;\n        this._close(this._deflate);\n        this._deflate = null;\n    }\n    protected _getInflate() {\n        if (this._inflate) return this._inflate;\n        let inflate = zlib.createInflateRaw({windowBits: this._peerWindowBits});\n        if (this._peerContextTakeover) this._inflate = inflate;\n        return inflate;\n    }\n    protected _getDeflate() {\n        if (this._deflate) return this._deflate;\n        let deflate = zlib.createDeflateRaw({\n            windowBits: this._ownWindowBits,\n            level: this._level,\n            memLevel: this._memLevel,\n            strategy: this._strategy\n        });\n\n        let flush = deflate.flush;\n\n        // This monkey-patch is needed to make Node 0.10 produce optimal output.\n        // Without this it uses Z_FULL_FLUSH and effectively drops all its context\n        // state on every flush.\n\n        if (deflate['_flushFlag'] !== undefined && deflate['params'] === undefined)\n            deflate.flush = function (callback) {\n                let ws = this._writableState;\n                if (ws.ended || ws.ending || ws.needDrain) {\n                    flush.call(this, callback);\n                } else {\n                    this._flushFlag = zlib.Z_SYNC_FLUSH;\n                    this.write(new Buffer(0), '', callback);\n                }\n            };\n\n        if (this._ownContextTakeover) this._deflate = deflate;\n        return deflate;\n    }\n    protected _close(codec) {\n        if (!codec || !codec.close){\n            return;\n        }\n        try {\n            codec.close()\n        } catch (error) {}\n    }\n}\n\n\n"]}