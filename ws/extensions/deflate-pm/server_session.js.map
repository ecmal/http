{"version":3,"file":"server_session.js","sourceRoot":"","sources":["server_session.ts"],"names":[],"mappings":";;IAIA;QACS,yBAAW,GAAlB,UAAmB,MAAM;YACvB,EAAE,CAAC,CAAC,CAAC,eAAM,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;gBAAC,MAAM,CAAC,KAAK,CAAC;YAC9C,EAAE,CAAC,CAAC,MAAM,CAAC,cAAc,CAAC,wBAAwB,CAAC,CAAC,CAAC,CAAC;gBACpD,EAAE,CAAA,CAAC,MAAM,CAAC,sBAAsB,KAAG,IAAI,CAAC,CAAA,CAAC;oBACvC,MAAM,CAAC,IAAI,CAAC;gBACd,CAAC;gBAAC,IAAI,CACN,EAAE,CAAC,CAAC,eAAM,CAAC,iBAAiB,CAAC,OAAO,CAAC,MAAM,CAAC,sBAAsB,CAAC,GAAG,CAAC,CAAC,CAAA,CAAC;oBACrE,MAAM,CAAC,KAAK,CAAC;gBACjB,CAAC;YACH,CAAC;YACD,MAAM,CAAC,IAAI,CAAC;QACd,CAAC;QAMM,wCAAgB,GAAvB;YACE,IAAI,QAAQ,GAAO,EAAE,CAAC;YAEtB,qFAAqF;YAErF,IAAI,CAAC,mBAAmB,GAAG,CAAC,IAAI,CAAC,wBAAwB;gBACrD,CAAC,IAAI,CAAC,OAAO,CAAC,0BAA0B,CAAC;YAE7C,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,mBAAmB,CAAC;gBAAC,QAAQ,CAAC,0BAA0B,GAAG,IAAI,CAAC;YAE1E,qFAAqF;YAErF,IAAI,CAAC,oBAAoB,GAAG,CAAC,IAAI,CAAC,yBAAyB;gBACvD,CAAC,IAAI,CAAC,OAAO,CAAC,0BAA0B,CAAC;YAE7C,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,oBAAoB,CAAC;gBAAC,QAAQ,CAAC,0BAA0B,GAAG,IAAI,CAAC;YAE3E,qFAAqF;YAErF,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,oBAAoB,IAAI,eAAM,CAAC,eAAe,EAC9E,IAAI,CAAC,OAAO,CAAC,sBAAsB,IAAI,eAAM,CAAC,eAAe,CAAC,CAAC;YAEnE,yEAAyE;YACzE,2EAA2E;YAC3E,EAAE,CAAC,CAAC,IAAI,CAAC,cAAc,GAAG,eAAM,CAAC,eAAe,IAAI,IAAI,CAAC,OAAO,CAAC,sBAAsB,CAAC;gBACtF,QAAQ,CAAC,sBAAsB,GAAG,IAAI,CAAC,cAAc,CAAC;YAExD,qFAAqF;YAErF,IAAI,SAAS,GAAG,IAAI,CAAC,OAAO,CAAC,sBAAsB,EAAE,UAAU,CAAC;YAChE,EAAE,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC;gBACd,EAAE,CAAC,CAAC,SAAS,KAAK,IAAI,CAAC;oBAAC,SAAS,GAAG,eAAM,CAAC,eAAe,CAAC;gBAC3D,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,qBAAqB,IAAI,eAAM,CAAC,eAAe,EAAE,SAAS,CAAC,CAAC;YACnG,CAAC;YAAC,IAAI,CAAC,CAAC;gBACN,IAAI,CAAC,eAAe,GAAG,eAAM,CAAC,eAAe,CAAC;YAChD,CAAC;YAED,EAAE,CAAC,CAAC,IAAI,CAAC,eAAe,GAAG,eAAM,CAAC,eAAe,CAAC;gBAChD,QAAQ,CAAC,sBAAsB,GAAG,IAAI,CAAC,eAAe,CAAC;YAEzD,MAAM,CAAC,QAAQ,CAAC;QAClB,CAAC;;;;QACH,oBAAC;QA9CC,uBAAY,OAAO,EAAE,MAAM;YACzB,mBAAM,OAAO,CAAC,CAAC;YACf,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC;QACxB,CAAC;IA2CH,CAAC,AA5DD,IA4DC;;IA5DD,6CA4DC,CAAA;;;;;;;;;;YA5DD,4BAAA,cAAmC,iBA4DlC","sourcesContent":["import {Common} from './common';\nimport {Session} from './session';\n\n\nexport class ServerSession extends Session{\n  static validParams(params) {\n    if (!Common.validParams(params)) return false;\n    if (params.hasOwnProperty('client_max_window_bits')) {\n      if(params.client_max_window_bits===true){\n        return true;\n      } else\n      if (Common.VALID_WINDOW_BITS.indexOf(params.client_max_window_bits) < 0){\n          return false;\n      }\n    }\n    return true;\n  }\n  protected _params;\n  constructor(options, params) {\n    super(options);\n    this._params = params;\n  }\n  public generateResponse() {\n    var response:any = {};\n\n    // https://tools.ietf.org/html/draft-ietf-hybi-permessage-compression#section-8.1.1.1\n\n    this._ownContextTakeover = !this._acceptNoContextTakeover &&\n        !this._params.server_no_context_takeover;\n\n    if (!this._ownContextTakeover) response.server_no_context_takeover = true;\n\n    // https://tools.ietf.org/html/draft-ietf-hybi-permessage-compression#section-8.1.1.2\n\n    this._peerContextTakeover = !this._requestNoContextTakeover &&\n        !this._params.client_no_context_takeover;\n\n    if (!this._peerContextTakeover) response.client_no_context_takeover = true;\n\n    // https://tools.ietf.org/html/draft-ietf-hybi-permessage-compression#section-8.1.2.1\n\n    this._ownWindowBits = Math.min(this._acceptMaxWindowBits || Common.MAX_WINDOW_BITS,\n        this._params.server_max_window_bits || Common.MAX_WINDOW_BITS);\n\n    // In violation of the spec, Firefox closes the connection if it does not\n    // send server_max_window_bits but the server includes this in its response\n    if (this._ownWindowBits < Common.MAX_WINDOW_BITS && this._params.server_max_window_bits)\n      response.server_max_window_bits = this._ownWindowBits;\n\n    // https://tools.ietf.org/html/draft-ietf-hybi-permessage-compression#section-8.1.2.2\n\n    var clientMax = this._params.client_max_window_bits, requestMax;\n    if (clientMax) {\n      if (clientMax === true) clientMax = Common.MAX_WINDOW_BITS;\n      this._peerWindowBits = Math.min(this._requestMaxWindowBits || Common.MAX_WINDOW_BITS, clientMax);\n    } else {\n      this._peerWindowBits = Common.MAX_WINDOW_BITS;\n    }\n\n    if (this._peerWindowBits < Common.MAX_WINDOW_BITS)\n      response.client_max_window_bits = this._peerWindowBits;\n\n    return response;\n  }\n}\n\n"]}