{"version":3,"file":"deflate-pm.js","sourceRoot":"","sources":["deflate-pm.ts"],"names":[],"mappings":";;QAIM,aAAa;IASnB;QAYW,qCAAS,GAAhB,UAAiB,OAAO;YACpB,eAAM,CAAC,eAAe,CAAC,OAAO,EAAE,aAAa,CAAC,CAAC;YAC/C,GAAG,CAAC,CAAC,IAAI,GAAG,IAAI,OAAO,CAAC,CAAC,CAAC;gBACtB,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,GAAG,OAAO,CAAC,GAAG,CAAC,CAAC;YACtC,CAAC;QACL,CAAC;QACM,+CAAmB,GAA1B;YACI,MAAM,CAAC,IAAI,8BAAa,CAAC,IAAI,CAAC,QAAQ,IAAI,EAAE,CAAC,CAAC;QAClD,CAAC;QACM,+CAAmB,GAA1B,UAA2B,MAAM;YAC7B,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC;gBAC5C,EAAE,CAAC,CAAC,8BAAa,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAA,CAAC;oBACtC,MAAM,CAAC,IAAI,8BAAa,CAAC,IAAI,CAAC,QAAQ,IAAI,EAAE,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;gBAC7D,CAAC;YACL,CAAC;YACD,MAAM,CAAC,IAAI,CAAC;QAChB,CAAC;QACL,wBAAC;QAtBG,2BAAmB,OAAQ;YANpB,SAAI,GAAG,oBAAoB,CAAC;YAC5B,SAAI,GAAG,YAAY,CAAC;YACpB,SAAI,GAAG,IAAI,CAAC;YACZ,SAAI,GAAG,KAAK,CAAC;YACb,SAAI,GAAG,KAAK,CAAC;YAGhB,EAAE,CAAA,CAAC,OAAO,CAAC,CAAA,CAAC;gBACR,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,CAAA;YAC3B,CAAC;QACL,CAAC;IAkBL,CAAC,AA7BD,IA6BC;;IA7BD,qDA6BC,CAAA;;;;;;;;;;;;;YAtCK,aAAa,GAAG;gBAClB,OAAO;gBACP,UAAU;gBACV,UAAU;gBACV,mBAAmB;gBACnB,eAAe;gBACf,0BAA0B;gBAC1B,sBAAsB;aACzB,CAAC;YACF,gCAAA,iBA6BC","sourcesContent":["import {ClientSession} from './deflate-pm/client_session';\nimport {ServerSession} from './deflate-pm/server_session';\nimport {Common} from './deflate-pm/common';\n\nconst VALID_OPTIONS = [\n    'level',\n    'memLevel',\n    'strategy',\n    'noContextTakeover',\n    'maxWindowBits',\n    'requestNoContextTakeover',\n    'requestMaxWindowBits'\n];\nexport class PerMessageDeflate  {\n    public name = 'permessage-deflate';\n    public type = 'permessage';\n    public rsv1 = true;\n    public rsv2 = false;\n    public rsv3 = false;\n    private _options;\n    public constructor(options?){\n        if(options){\n            this.configure(options)\n        }\n    }\n    public configure(options) {\n        Common.validateOptions(options, VALID_OPTIONS);\n        for (let key in options) {\n            this._options[key] = options[key];\n        }\n    }\n    public createClientSession() {\n        return new ClientSession(this._options || {});\n    }\n    public createServerSession(offers) {\n        for (var i = 0, n = offers.length; i < n; i++) {\n            if (ServerSession.validParams(offers[i])){\n                return new ServerSession(this._options || {}, offers[i]);\n            }\n        }\n        return null;\n    }\n}\n\n"]}