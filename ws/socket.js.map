{"version":3,"file":"socket.js","sourceRoot":"","sources":["socket.ts"],"names":[],"mappings":"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","sourcesContent":["import {Driver} from \"./driver\";\nimport {PerMessageDeflate} from \"./extensions/deflate-pm\";\nimport {OpenEvent, MessageEvent} from \"./driver/base\";\nimport {Hybi} from \"./driver/hybi\";\nimport {Cached} from \"runtime/decorators\";\n\nexport class Socket  {\n    static connections:Set<Socket>;\n    static isWebSocket(request){\n        return Driver.isWebSocket(request)\n    }\n\n    protected path:any;\n    protected query:any;\n    protected headers:any;\n    protected params:any;\n    protected driver:Hybi;\n\n    @Cached\n    protected get id():string{\n        return new Buffer(this.driver.key,'base64').toString('hex');\n    }\n\n    protected get extensions():any[]{\n        return [new PerMessageDeflate()];\n    }\n\n    constructor(request?, socket?, body?, options?:any) {\n        Promise.resolve(true).then(r=>this.accept()).then(r=>{\n            if(r){\n                this.start(request, socket, body, options);\n                this.driver.start();\n            }else{\n                socket.end();\n            }\n        },e=>socket.end());\n    }\n\n    protected accept():any{\n        return true;\n    }\n\n    protected start(request?, socket?, body?, options?:any){\n        Object.defineProperty(this,'driver',{\n           value : <Hybi>Driver.http(request,options)\n        });\n        this.driver.on('open',(event:OpenEvent)=>{\n            let connections:Set<Socket> = this.constructor['connections'];\n            if(!connections){\n                Object.defineProperty(this.constructor,'connections',{\n                    configurable    : true,\n                    value           : connections = new Set<Socket>()\n                })\n            }\n            connections.add(this);\n            this.onOpen(this.id);\n        });\n        this.driver.on('message',(event:MessageEvent)=>{\n            this.onMessage(event.data);\n        });\n        this.driver.on('close',(event:OpenEvent)=>{\n            let connections:Set<Socket> = this.constructor['connections'];\n            if(connections){\n                connections.delete(this)\n            }\n            this.onClose(this.id)\n        });\n        this.driver.on('error',(error)=>{\n            try{this.onError(error)}catch(ex){\n                try{\n                    this.close(error.message,error.code||1006);\n                }finally{\n                    let connections:Set<Socket> = this.constructor['connections'];\n                    if(!connections){\n                        connections.delete(this)\n                    }\n                }\n            }\n        });\n        this.driver.io.write(body);\n        socket.pipe(this.driver.io).pipe(socket);\n        this.extensions.forEach(e=>{\n            this.driver.addExtension(e)\n        });\n        this.driver.start();\n    }\n    public send(message){\n        if(Buffer.isBuffer(message)){\n            this.binary(message);\n        }else{\n            if(typeof message != 'string'){\n                message = JSON.stringify(message)\n            } \n            this.text(message);\n        }\n    }\n    public text(message:string):boolean {\n        return this.driver.text(message);\n    }\n    public binary(message:Buffer):boolean {\n        return this.driver.binary(message);\n    }\n    public ping(message, callback?):boolean {\n        return this.driver.ping(message,callback)\n    }\n    public pong(message):boolean {\n        return this.driver.pong(message)\n    }\n    public close(reason?, code?):boolean {\n        return this.driver.close(reason,code)\n    }\n\n    protected onOpen(id:string){}\n    protected onMessage(data:any){}\n    protected onClose(id:string){\n\n    }\n    protected onError(error){\n        throw new Error(error.message||error);\n    }\n\n    protected toJSON(){\n        return {\n            id      : this.id,\n            path    : this.path,\n            params  : this.params,\n            query   : this.query,\n            headers : this.headers\n        }\n    }\n}\n\n\n\n"]}