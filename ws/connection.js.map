{
  "version": 3,
  "file": "connection.js",
  "sourceRoot": "/Users/Sergey/Work/BB/ecmal/http/src",
  "sources": [
    "connection.ts"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "import {Socket} from \"node/net\";\nimport {EventEmitter} from \"node/events\";\nimport {IncomingMessage} from \"node/http\";\nimport * as CRYPTO from 'node/crypto';\n\n\nexport enum WsOpCode {\n    CHUNK   = 0x00,\n    TEXT    = 0x01,\n    BINARY  = 0x02,\n    CLOSE   = 0x08,\n    PING    = 0x09,\n    PONG    = 0x0A\n}\nexport enum WsState {\n    CONNECTING,OPEN\n}\n\nexport class WsFrame {\n    static MAX_SIZE = 128 * 1024;\n    static decode(data:Buffer,isServer:boolean):WsFrame{\n        var fin, opcode, B, HB, mask, len, payload, start, i, hasMask;\n\n        if (data.length < 2) {\n            return\n        }\n        // Is this the last frame in a sequence?\n        B = data[0];\n        HB = B >> 4;\n        if (HB % 8) {\n            // RSV1, RSV2 and RSV3 must be clear\n            return null\n        }\n        fin = HB === 8;\n        opcode = B % 16;\n\n        if (opcode !== 0 && opcode !== 1 && opcode !== 2 &&\n            opcode !== 8 && opcode !== 9 && opcode !== 10) {\n            // Invalid opcode\n            return null\n        }\n        if (opcode >= 8 && !fin) {\n            // Control frames must not be fragmented\n            return null\n        }\n        B = data[1];\n        hasMask = B >> 7;\n        if ((isServer && !hasMask) || (!isServer && hasMask)) {\n            // Frames sent by clients must be masked\n            return null\n        }\n        len = B % 128;\n        start = hasMask ? 6 : 2;\n        if (data.length < start + len) {\n            // Not enough data in the buffer\n            return null\n        }\n        // Get the actual payload length\n        if (len === 126) {\n            len = data.readUInt16BE(2);\n            start += 2\n        } else\n        if (len === 127) {\n            // Warning: JS can only store up to 2^53 in its number format\n            len = data.readUInt32BE(2) * Math.pow(2, 32) + data.readUInt32BE(6);\n            start += 8\n        }\n        if (data.length < start + len) {\n            return null\n        }\n        // Extract the payload\n        payload = data.slice(start, start + len);\n        if (hasMask) {\n            // Decode with the given mask\n            mask = data.slice(start - 4, start);\n            for (i = 0; i < payload.length; i++) {\n                payload[i] ^= mask[i % 4]\n            }\n        }\n        return new WsFrame(fin,opcode,payload,start + len);\n    }\n    static createFrames(op:WsOpCode,data:Buffer,handler:(b:Buffer)=>void){\n        var start = 0, end = start+WsFrame.MAX_SIZE, first=true;\n        while(start<data.length){\n            var first = start==0;\n            var end = Math.min(start + WsFrame.MAX_SIZE,data.length);\n            var buffer = data.slice(start,start=end);\n            handler(this.createFrame(first?op:WsOpCode.CHUNK,buffer,end>=data.length));\n        }\n    }\n    static createFrame(op:WsOpCode,data:Buffer,fin:boolean=true,masked:boolean=false):Buffer {\n        var payload, meta;\n        if (masked) {\n            payload = new Buffer(data.length);\n            data.copy(payload)\n        } else {\n            payload = data;\n        }\n        meta = this.createMetaData(fin, op, masked, payload);\n        return Buffer.concat([meta, payload], meta.length + payload.length)\n    }\n    static createMetaData(fin:boolean, opcode:WsOpCode, masked:boolean, payload:Buffer) {\n        var len, meta, start, mask, i;\n        len = payload.length;\n        // Creates the buffer for meta-data\n        meta = new Buffer(2 + (len < 126 ? 0 : (len < 65536 ? 2 : 8)) + (masked ? 4 : 0))\n        // Sets fin and opcode\n        meta[0] = (fin ? 128 : 0) + opcode;\n        // Sets the mask and length\n        meta[1] = masked ? 128 : 0;\n        start = 2;\n        if (len < 126) {\n            meta[1] += len\n        } else if (len < 65536) {\n            meta[1] += 126;\n            meta.writeUInt16BE(len, 2);\n            start += 2\n        } else {\n            // Warning: JS doesn't support integers greater than 2^53\n            meta[1] += 127;\n            meta.writeUInt32BE(Math.floor(len / Math.pow(2, 32)), 2);\n            meta.writeUInt32BE(len % Math.pow(2, 32), 6);\n            start += 8\n        }\n\n        // Set the mask-key\n        if (masked) {\n            mask = new Buffer(4);\n            for (i = 0; i < 4; i++) {\n                meta[start + i] = mask[i] = Math.floor(Math.random() * 256)\n            }\n            for (i = 0; i < payload.length; i++) {\n                payload[i] ^= mask[i % 4]\n            }\n            start += 4\n        }\n\n        return meta\n    }\n\n    public fin:boolean;\n    public op:WsOpCode;\n    public data:Buffer;\n    public size:number;\n    public code:number;\n\n    constructor(fin:boolean,opcode:WsOpCode,payload:Buffer,size:number){\n        this.fin = fin;\n        this.op = opcode;\n        this.size = size;\n        this.data = payload;\n    }\n    inspect(){\n        var length = this.data?this.data.length:0;\n        return {\n            fin     : this.fin,\n            op      : this.op,\n            size    : this.size,\n            length  : this.size-length\n        }\n    }\n}\n\nexport class WsError extends Error {\n    public code:number;\n    constructor(code,message){\n        super(message);\n        this.code = code;\n    }\n    toString(){\n        return `${this.code} ${this.message}`;\n    }\n}\nexport class WsConnection extends EventEmitter{\n\n    protected server:boolean;\n    protected state:WsState;\n    protected headers:any;\n    protected socket:Socket;\n\n    private reading:WsOpCode;\n    private readingBuffer:Buffer;\n\n    private queue:{op:WsOpCode,data:Buffer}[];\n\n    get version():string{\n        return this.headers['sec-websocket-version'].toLowerCase();\n    }\n    get origin():string{\n        return this.headers['origin'].toLowerCase();\n    }\n    get key():string{\n        return this.headers['sec-websocket-key'];\n    }\n    get id():string{\n        return Object.defineProperty(this,'id',<PropertyDescriptor>{\n            enumerable:true,\n            writable:false,\n            configurable:false,\n            value:CRYPTO\n                .createHash('md5')\n                .update(this.hash,'ascii')\n                .digest('hex')\n        }).id;\n    }\n    get hash():string{\n        return Object.defineProperty(this,'hash',<PropertyDescriptor>{\n            enumerable:true,\n            writable:false,\n            configurable:false,\n            value:CRYPTO\n                .createHash('sha1')\n                .update(`${this.key}258EAFA5-E914-47DA-95CA-C5AB0DC85B11`,'ascii')\n                .digest('base64')\n        }).hash;\n    }\n    get protocols():string[]{\n        return String(this.headers['sec-websocket-protocol'])\n            .trim()\n            .toLowerCase()\n            .split(',')\n            .map(p=>p&&p.trim());\n    }\n    \n    private ping:string;\n    private pinger:any;\n    constructor(isServer:boolean){\n        super();\n        var socket,headers,state=WsState.CONNECTING,buffer=new Buffer(0);\n        this.queue=[];\n        Object.defineProperty(this,'state',<PropertyDescriptor>{\n            enumerable  : false,\n            get         : ()=>state,\n            set         : (v)=>state=v\n        });\n        Object.defineProperty(this,'socket',<PropertyDescriptor>{\n            enumerable   : false,\n            configurable : true,\n            set          : (v)=>{\n                v.on('close',(ok:boolean)=>{\n                    this.onClose(new Buffer(ok?\"0001\":\"0000\"));\n                });\n                v.on('data', (data)=>{\n                    if(data.length){\n                        buffer = Buffer.concat([buffer,data]);\n                        var frame = WsFrame.decode(buffer,isServer);\n                        if(frame){\n                            buffer = buffer.slice(frame.size);\n                            this.onFrame(frame);\n                        }\n                    }\n                });\n                v.on('end', (data?)=>{\n                    if(data && data.length){\n                        buffer = Buffer.concat([buffer,data]);\n                        var frame = WsFrame.decode(buffer,isServer);\n                        if(frame){\n                            buffer = buffer.slice(frame.size);\n                            this.onFrame(frame);\n                        }\n                    }\n                });\n                v.on('error', (e?:Error)=>{\n                    console.info('onError',e.stack);\n                    v.destroy();\n                });\n                Object.defineProperty(this,'socket',<PropertyDescriptor>{\n                    enumerable      : false,\n                    configurable    : true,\n                    value           : v\n                });\n                this.pinger = setInterval(()=>{\n                    this.sendPing();\n                },5000);\n            }\n        });\n        Object.defineProperty(this,'headers',<PropertyDescriptor>{\n            enumerable      : false,\n            configurable    : true,\n            set             : (v)=>{\n                Object.defineProperty(this,'headers',<PropertyDescriptor>{\n                    enumerable      : false,\n                    configurable    : false,\n                    value           : v\n                });\n            }\n        });\n        Object.defineProperty(this,'server',<PropertyDescriptor>{\n            enumerable      : false,\n            configurable    : true,\n            set             : (v)=>{\n                Object.defineProperty(this,'server',<PropertyDescriptor>{\n                    enumerable      : false,\n                    configurable    : false,\n                    value           : v\n                });\n            }\n        });\n\n    }\n\n    public connect(){\n        this.server = false;\n        return true;\n    }\n    public accept(request:IncomingMessage,protocol:string):boolean{\n        this.server = true;\n        this.headers = request.headers;\n        if(this.version != '13') {\n            throw new WsError(400,`Unsupported Socket Version ${this.version}`);\n        } else\n        if(this.protocols.indexOf(protocol)<0){\n            return false;\n        }else{\n            this.socket = request.socket;\n            return true;\n        }\n    }\n\n    protected onFrame(frame:WsFrame){\n        this.emit('frame',frame);\n        if(frame.fin){\n            switch(frame.op){\n                case WsOpCode.BINARY : return this.onBinary(frame.data);\n                case WsOpCode.TEXT : return this.onText(frame.data);\n                case WsOpCode.PONG : return this.onPong(frame.data);\n                case WsOpCode.PING : return this.onPing(frame.data);\n                case WsOpCode.CLOSE : return this.onClose(frame.data);\n                case WsOpCode.CHUNK : return this.onStreamDone(frame.data);\n                default : throw new Error('Invalid Frame')\n            }\n        }else{\n            switch(frame.op){\n                case WsOpCode.BINARY    : return this.onStreamBinary(frame.data);\n                case WsOpCode.TEXT      : return this.onStreamText(frame.data);\n                case WsOpCode.CHUNK     : return this.onStreamChunk(frame.data);\n                default : throw new Error('Invalid Frame')\n            }\n        }\n\n    }\n    protected onText(buffer:Buffer){\n        this.emit('text',buffer.toString());\n    }\n    protected onBinary(buffer:Buffer){\n        this.emit('binary',buffer);\n    }\n    protected onPong(buffer:Buffer){\n        var time  = buffer.toString();\n        //console.info(\"ON PONG\",this.id,time,time==this.ping);\n        this.ping = null;\n        this.emit('pong',time);\n    }\n    protected onPing(buffer:Buffer){\n        //console.info(\"ON PING\");\n        this.emit('ping',buffer);\n        this.sendFrame(WsOpCode.PONG,buffer);\n    }\n    protected onClose(buffer:Buffer){\n        var code    = 0;\n        var message = \"\";\n        if(buffer){\n            code    = buffer.readUInt16BE(0);\n            message = buffer.toString('utf8',2);\n        }\n        clearInterval(this.pinger);\n        if(this.socket){\n            this.socket.removeAllListeners('close');\n            this.socket.removeAllListeners('data');\n            this.socket.removeAllListeners('end');\n            this.socket.removeAllListeners('error');\n            this.socket.destroy();\n            delete this.socket;\n        }\n        this.emit('close',code,message);\n    }\n    protected onStreamBinary(buffer:Buffer){\n        this.reading = WsOpCode.BINARY;\n        if(this.listeners('stream').length){\n            this.emit('stream',buffer,this.reading,'start');\n        }else{\n            this.readingBuffer = buffer\n        }\n    }\n    protected onStreamText(buffer:Buffer){\n        this.reading = WsOpCode.TEXT;\n        if(this.listeners('stream').length){\n            this.emit('stream',buffer,this.reading,'start');\n        }else{\n            this.readingBuffer = buffer\n        }\n    }\n    protected onStreamChunk(buffer:Buffer){\n        if(this.listeners('stream').length){\n            this.emit('stream',buffer,this.reading,'chunk');\n        }else{\n            this.readingBuffer = Buffer.concat(\n                [this.readingBuffer,buffer],\n                this.readingBuffer.length+buffer.length\n            );\n        }\n    }\n    protected onStreamDone(buffer:Buffer){\n        if(this.listeners('stream').length){\n            this.emit('stream',buffer,this.reading,'chunk');\n        }else{\n            this.readingBuffer = Buffer.concat(\n                [this.readingBuffer,buffer],\n                this.readingBuffer.length+buffer.length\n            );\n            switch(this.reading){\n                case WsOpCode.TEXT : this.onText(this.readingBuffer); break;\n                case WsOpCode.BINARY : this.onBinary(this.readingBuffer); break;\n            }\n            this.reading=null;\n            this.readingBuffer=null;\n        }\n    }\n    protected sendFrame(op:WsOpCode,data:Buffer){\n        this.queue.push({op,data});\n        if(this.queue.length==1){\n            while (this.queue.length) {\n                var op:WsOpCode = this.queue[0].op;\n                var data:Buffer = this.queue[0].data;\n                WsFrame.createFrames(op, data, (frame:Buffer)=> {\n                    this.socket.write(frame);\n                });\n                this.queue.shift();\n            }\n        }\n    }\n    protected sendPing(){\n        if(!this.ping){\n            this.ping=new Date().toISOString();\n            this.sendFrame(WsOpCode.PING,new Buffer(this.ping));\n        }\n    }\n    public sendText(text:string){\n        this.sendFrame(WsOpCode.TEXT,new Buffer(text))\n    }\n    public sendBinary(buffer:Buffer){\n        this.sendFrame(WsOpCode.BINARY,buffer)\n    }\n\n}"
  ]
}