{"version":3,"file":"server.js","sourceRoot":"","sources":["server.ts"],"names":[],"mappings":"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","sourcesContent":["import Node from './node';\nimport {Emitter} from \"runtime/events\";\nimport {Bound} from \"runtime/decorators\";\n\n\nexport class Server extends Emitter {\n\n    static initResponse(res) {\n    }\n    static initRequest(req) {\n    }\n    static get handlers(){\n        return Object.defineProperty(this,'handlers',{\n            value:Object.create(null)\n        }).handlers\n    };\n    static handler(name){\n        return handler=>{\n            Object.defineProperty(Server.handlers,name,<PropertyDescriptor>{\n                enumerable  : true,\n                value       : handler\n            })\n        }\n    }\n\n    public handlers:any;\n    public config:any;\n    public server:any;\n\n    constructor(config){\n        super();\n        this.config = config;\n        this.handlers = Object.create(null);\n    }\n\n    public start(){\n        this.server = new Node.Http.Server();\n        this.server.on('request',this.emit.bind(this,'request'));\n        this.server.on('upgrade',this.emit.bind(this,'upgrade'));\n        this.server.listen(this.config.port,this.config.host);\n        this.on('request',this.doRequest);\n        this.on('upgrade',this.doUpgrade);\n        Object.keys(this.config).forEach(name=>{\n            if(Server.handlers[name]){\n                this.handlers[name] = new (Server.handlers[name].configure(this,this.config[name]))();\n            }\n        });\n        return this;\n    }\n    @Bound\n    protected doRequest(req,res){\n        if(this.config.debug){\n            console.info(req.method,req.url);\n        }\n        Server.initRequest(req);\n        Server.initResponse(res);\n        var chain = new Promise((resolve,reject)=>{\n            var body = new Buffer(0);\n            req.on('data',(chunk)=>{\n                body=Buffer.concat([body,chunk],body.length+chunk.length);\n            });\n            req.on('end',()=>{\n                req.body = body;\n                resolve();\n            });\n        });\n        Object.keys(this.handlers).forEach(name=>{\n            var handler = this.handlers[name];\n            chain = chain.then(()=>{\n                if(!res.finished){\n                    if(typeof handler.handle=='function'){\n                        return handler.handle(req,res);\n                    }\n                }else{\n                    return true;\n                }\n            });\n        });\n        chain.then(\n            s=>{\n                if(res.stream){\n                    res.stream.pipe(res);\n                }else{\n                    res.end();\n                }\n            },\n            e=>{\n            console.error(e.stack);\n                res.writeHead(500,{\n                    'Content-Type' : 'text/plain'\n                });\n                res.end(e.stack);\n            }\n        );\n        return chain;\n    }\n    @Bound\n    protected doUpgrade(req,socket,body){}\n}"]}